vue;colonnes;requetes_alimentation;tableFiliere;partitions;partitionsValues
blb_kpi; cd_type_op STRING, cd_prod STRING, cd_sous_prod STRING, nb_op INT, montant DECIMAL(16, 2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE; SELECT IP_E_CDN.cd_type_op as cd_type_op, IP_E_CDN.cd_prod as cd_prod, IP_E_CDN.cd_sous_prod as cd_sous_prod, count(IP_E_CDN.NOREFINT) as nb_op, sum(IP_E_CDN.montant) as montant, IP_E_CDN.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_E_CDN.cd_pays_e as cd_pays_e, IP_E_CDN.cd_pays_r as cd_pays_r, IP_E_CDN.cd_banque_e as cd_banque_e, IP_E_CDN.cd_banque_r as cd_banque_r, IP_E_CDN.cd_canal as cd_canal, IP_E_CDN.cd_statut_op as cd_statut_op, IP_E_CDN.cd_signature as cd_signature, IP_E_CDN.cd_typologie AS cd_typologie, IP_E_CDN.cd_echange as cd_echange, IP_E_CDN.is_connexe AS is_connexe, IP_E_CDN.dt_ope AS dt_ope FROM (SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR( ope.MTOPERAT1, 1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT) ), '.', SUBSTR( ope.MTOPERAT1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT) ) ) AS DECIMAL(16, 2) ) ELSE CAST( ope.MTOPERAT1 AS DECIMAL(16, 2) ) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, ope.CDAPPORI as cd_canal, concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) as cd_statut_op, "" AS cd_signature, "Paiement unique" AS cd_typologie, CASE WHEN SUBSTR(ope.CDIBAEMT, 5, 5) = SUBSTR(ope.CDIBADES, 5, 5) THEN "Intrabancaire" WHEN SUBSTR (ope.CDBICDES, 1, 8) in ( "SOGEFRPP", "SGBTMCMC", "SGGNGNGN", "SGGEGQGQ", "INELFRPP", "SGBBBFBF", "SOGETDND", "SGSEHKHH", "LAMXFRPP", "LIMXFRPP", "PAREFRPP", "HAMBJESX", "HAMBGB2L", "SOGEMCM1", "COURFR2T", "KOLBFR21", "TARNFR2L", "HAMBGIGI", "SGPBBE99", "RALPFR2G", "UIBKTNTT", "GSFHFRPP", "SGCRLULL", "SOGEBJBJ", "SSEBGHAC", "NEWGCAMM", "SGABLU22", "SGTGMAMC", "NORDFRPP", "NORDMCM1", "SGSCUS33", "BNUGFR21", "RUEGCHZZ", "DETDFRPP", "LAYDFR2W", "GSCFFR22", "NEWGAU2S", "NEWGGB2L", "HSTBDEHH", "PDBPMEPG", "SGSNSNDA", "DETARUMM", "BIIMMRMR", "BSOGBRSP", "SGMBMAMC", "SOGECAMM", "BFAVMGMG", "SGCICIAB", "EUVLFRPP", "SOGEDZAL", "SGCMCMCX", "SOGYRSBG", "RSBNRUMM", "REPLGE22", "MOBBMD22", "OHRDMK22", "PUPPALTR", "SGCLCNBJ", "ACTSDEMM", "BOURDEFF", "SMCTFR2A", "SMCTMCM1", "SOGECGCG", "SGSEKRSL", "SGDILULL", "SGMFLULL", "KBENGGST", "KBIMGB2L", "SGNPJPJT", "SGABATWW", "SOGETWTP", "SGABBEB2", "SOGEZAJJ", "SGABCHZZ", "SOGEDEFF", "SOGETRIS", "SOGEPLPW", "SOGEJPJT", "SOGESGSG", "SOGEINBB", "SOGEKRSE", "SOGENL2A", "SOGEUS33", "SOGEGB2L", "SOGEHKHH", "SOGECAMB", "SOGEITMM", "SOGEESMM", "HAMBGGSP", "SOGETGTG" ) THEN "Intragroupe" ELSE CASE WHEN TRIM(ope.CDTYPCSM) = 'X' THEN "Intrabancaire" WHEN TRIM(ope.CDTYPCSM) = 'W' THEN "Intragroupe" WHEN TRIM(ope.CDTYPCSM) = 'U' THEN "SEPA-EU" WHEN TRIM(ope.CDTYPCSM) = 'S' THEN "STEP2" END END as cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) as date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_cdn.ext_ipeope as ope WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) IN ( 'IMP', 'RCCNTR', 'ANUSRP', 'ANURFB', 'RCCNEC' ) ) AS IP_E_CDN where IP_E_CDN.last_dtref009=1 GROUP BY IP_E_CDN.cd_type_op, IP_E_CDN.cd_prod, IP_E_CDN.cd_sous_prod, IP_E_CDN.cd_ponctuel_permanent, IP_E_CDN.cd_pays_e, IP_E_CDN.cd_pays_r, IP_E_CDN.cd_banque_e, IP_E_CDN.cd_banque_r, IP_E_CDN.cd_canal, IP_E_CDN.cd_statut_op, IP_E_CDN.cd_signature, IP_E_CDN.cd_typologie, IP_E_CDN.cd_echange, IP_E_CDN.is_connexe, IP_E_CDN.dt_ope; select dtref001 from lake_gtps_a1861_nauplie_cdn.ext_ipeope where trim(dtref001) <> '' and dtref001 like 'ymj%'; enseigne STRING, datasource STRING; enseigne = 'CDN', datasource = 'NAUPLI_IPE'
blb_kpi;cd_type_op STRING,cd_prod STRING,cd_sous_prod STRING, nb_op INT, montant DECIMAL(16,2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE;SELECT IP_R_CDN.cd_type_op as cd_type_op, IP_R_CDN.cd_prod as cd_prod, IP_R_CDN.cd_sous_prod as cd_sous_prod, count(IP_R_CDN.NOREFINT) as nb_op, sum(IP_R_CDN.montant) as montant, IP_R_CDN.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_R_CDN.cd_pays_e as cd_pays_e, IP_R_CDN.cd_pays_r as cd_pays_r, IP_R_CDN.cd_banque_e as cd_banque_e, IP_R_CDN.cd_banque_r as cd_banque_r, IP_R_CDN.cd_canal as cd_canal, IP_R_CDN.cd_statut_op as cd_statut_op, IP_R_CDN.cd_signature as cd_signature , IP_R_CDN.cd_typologie AS cd_typologie, IP_R_CDN.cd_echange as cd_echange, IP_R_CDN.is_connexe AS is_connexe, IP_R_CDN.dt_ope AS dt_ope FROM ( SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR(ope.MTOPERAT2, 1, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)), '.', SUBSTR(ope.MTOPERAT2, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT)) ) AS DECIMAL(16, 2) ) ELSE CAST(ope.MTOPERAT2 AS DECIMAL(16, 2)) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, "" as cd_canal, concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) as cd_statut_op, "" AS cd_signature, "" AS cd_typologie, "" AS cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) as date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_cdn.ext_iprope as ope WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) IN ('IMP','ANUACN','ANURFS','ANURFN')) AS IP_R_CDN where IP_R_CDN.last_dtref009=1 GROUP BY IP_R_CDN.cd_type_op, IP_R_CDN.cd_prod, IP_R_CDN.cd_sous_prod, IP_R_CDN.cd_ponctuel_permanent, IP_R_CDN.cd_pays_e, IP_R_CDN.cd_pays_r, IP_R_CDN.cd_banque_e, IP_R_CDN.cd_banque_r, IP_R_CDN.cd_canal, IP_R_CDN.cd_statut_op, IP_R_CDN.cd_signature, IP_R_CDN.cd_typologie, IP_R_CDN.cd_echange, IP_R_CDN.is_connexe, IP_R_CDN.dt_ope;select dtref001 from lake_gtps_a1861_nauplie_cdn.ext_iprope where trim(dtref001) <> '' and dtref001 like 'ymj%';enseigne STRING,datasource STRING;enseigne='CDN',datasource='NAUPLI_IPR'
blb_kpi; cd_type_op STRING, cd_prod STRING, cd_sous_prod STRING, nb_op INT, montant DECIMAL(16, 2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE; SELECT IP_E_BOURSO.cd_type_op as cd_type_op, IP_E_BOURSO.cd_prod as cd_prod, IP_E_BOURSO.cd_sous_prod as cd_sous_prod, count(IP_E_BOURSO.NOREFINT) as nb_op, sum(IP_E_BOURSO.montant) as montant, IP_E_BOURSO.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_E_BOURSO.cd_pays_e as cd_pays_e, IP_E_BOURSO.cd_pays_r as cd_pays_r, IP_E_BOURSO.cd_banque_e as cd_banque_e, IP_E_BOURSO.cd_banque_r as cd_banque_r, IP_E_BOURSO.cd_canal as cd_canal, IP_E_BOURSO.cd_statut_op as cd_statut_op, IP_E_BOURSO.cd_signature as cd_signature, IP_E_BOURSO.cd_typologie AS cd_typologie, IP_E_BOURSO.cd_echange as cd_echange, IP_E_BOURSO.is_connexe AS is_connexe, IP_E_BOURSO.dt_ope AS dt_ope FROM (SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR( ope.MTOPERAT1, 1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT) ), '.', SUBSTR( ope.MTOPERAT1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT) ) ) AS DECIMAL(16, 2) ) ELSE CAST( ope.MTOPERAT1 AS DECIMAL(16, 2) ) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, ope.CDAPPORI as cd_canal, concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) as cd_statut_op, "" AS cd_signature, "Paiement unique" AS cd_typologie, CASE WHEN SUBSTR(ope.CDIBAEMT, 5, 5) = SUBSTR(ope.CDIBADES, 5, 5) THEN "Intrabancaire" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SGBTMCMC", "SGGNGNGN", "SGGEGQGQ", "INELFRPP", "SGBBBFBF", "SOGETDND", "SGSEHKHH", "LAMXFRPP", "LIMXFRPP", "PAREFRPP", "HAMBJESX", "HAMBGB2L", "SOGEGPGP", "COURFR2T", "KOLBFR21", "TARNFR2L", "HAMBGIGI", "SGPBBE99", "RALPFR2G", "UIBKTNTT", "GSFHFRPP", "SGCRLULL", "SOGEBJBJ", "SSEBGHAC", "NEWGCAMM", "SGABLU22", "SGTGMAMC", "SOGENCNN", "NORDFRPP", "NORDMCM1", "SGSCUS33", "BNUGFR21", "BPOLPFTP", "RUEGCHZZ", "BFCOFRPP", "DETDFRPP", "LAYDFR2W", "BOUSFRPP", "GSCFFR22", "NEWGAU2S", "NEWGGB2L", "HSTBDEHH", "BRDEROBU", "PDBPMEPG", "SGSNSNDA", "DETARUMM", "TWOSITMM", "SOGEHR22", "BIIMMRMR", "BSOGBRSP", "SGMBMAMC", "SOGECAMM", "SOGECY2N", "BFAVMGMG", "SGCICIAB", "TTBBBG22", "EUVLFRPP", "SKBASI2X", "SOGEDZAL", "KOMBCZPP", "SGCMCMCX", "SOGYRSBG", "RSBNRUMM", "REPLGE22", "MOBBMD22", "OHRDMK22", "PUPPALTR", "SGCLCNBJ", "ACTSDEMM", "BOURDEFF", "SMCTFR2A", "SMCTMCM1", "BFCOYTYT", "SOGECGCG", "SGSEKRSL", "SGDILULL", "SGMFLULL", "KBENGGST", "KBIMGB2L", "SGNPJPJT" ) THEN "Intragroupe" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SOGEFRPP", "SOGEMCM1", "SGABATWW", "SOGETWTP", "SGABBEB2", "SOGEZAJJ", "SGABCHZZ", "SOGEDEFF", "SOGETRIS", "SOGEPLPW", "SOGEJPJT", "SOGESGSG", "SOGEINBB", "SOGEKRSE", "SOGENL2A", "SOGEUS33", "SOGEGB2L", "SOGEHKHH", "SOGECAMB", "SOGEITMM", "SOGEESMM", "KOMBSKBA", "HAMBGGSP", "SOGETGTG", "IBLC : 21443433" ) THEN "Intrabancaire"  ELSE CASE WHEN TRIM(ope.CDTYPCSM) = 'X' THEN "Intrabancaire" WHEN TRIM(ope.CDTYPCSM) = 'W' THEN "Intragroupe" WHEN TRIM(ope.CDTYPCSM) = 'U' THEN "SEPA-EU" WHEN TRIM(ope.CDTYPCSM) = 'S' THEN "STEP2" END END as cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) as date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_bourso.ext_ipeope as ope INNER JOIN ( SELECT ext.NOREFINT, MAX( coalesce(ext.DTREF009, '') ) AS max_dtref009 FROM lake_gtps_a1861_nauplie_bourso.ext_ipeope ext GROUP BY ext.NOREFINT ) ope1 on Trim(ope.NOREFINT)= Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)= Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) IN ( 'IMP', 'RCCNTR', 'ANUSRP', 'ANURFB', 'RCCNEC' ) ) AS IP_E_BOURSO GROUP BY IP_E_BOURSO.cd_type_op, IP_E_BOURSO.cd_prod, IP_E_BOURSO.cd_sous_prod, IP_E_BOURSO.cd_ponctuel_permanent, IP_E_BOURSO.cd_pays_e, IP_E_BOURSO.cd_pays_r, IP_E_BOURSO.cd_banque_e, IP_E_BOURSO.cd_banque_r, IP_E_BOURSO.cd_canal, IP_E_BOURSO.cd_statut_op, IP_E_BOURSO.cd_signature, IP_E_BOURSO.cd_typologie, IP_E_BOURSO.cd_echange, IP_E_BOURSO.is_connexe, IP_E_BOURSO.dt_ope; select dtref001 from lake_gtps_a1861_nauplie_bourso.ext_ipeope where trim(dtref001) <> '' and dtref001 like 'ymj%'; enseigne STRING, datasource STRING; enseigne = 'BOURSO', datasource = 'NAUPLI_IPE'
blb_kpi;cd_type_op STRING,cd_prod STRING,cd_sous_prod STRING, nb_op INT, montant DECIMAL(16,2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE;SELECT IP_R_BOURSO.cd_type_op as cd_type_op, IP_R_BOURSO.cd_prod as cd_prod, IP_R_BOURSO.cd_sous_prod as cd_sous_prod, count(IP_R_BOURSO.NOREFINT) as nb_op, sum(IP_R_BOURSO.montant) as montant, IP_R_BOURSO.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_R_BOURSO.cd_pays_e as cd_pays_e, IP_R_BOURSO.cd_pays_r as cd_pays_r, IP_R_BOURSO.cd_banque_e as cd_banque_e, IP_R_BOURSO.cd_banque_r as cd_banque_r, IP_R_BOURSO.cd_canal as cd_canal, IP_R_BOURSO.cd_statut_op as cd_statut_op, IP_R_BOURSO.cd_signature as cd_signature , IP_R_BOURSO.cd_typologie AS cd_typologie, IP_R_BOURSO.cd_echange as cd_echange, IP_R_BOURSO.is_connexe AS is_connexe, IP_R_BOURSO.dt_ope AS dt_ope FROM ( SELECT ope.norefint as norefint, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR(ope.MTOPERAT2, 1, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)), '.', SUBSTR(ope.MTOPERAT2, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT)) ) AS DECIMAL(16, 2) ) ELSE CAST(ope.MTOPERAT2 AS DECIMAL(16, 2)) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, "" as cd_canal, concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) as cd_statut_op, "" AS cd_signature, "" AS cd_typologie, "" AS cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) as date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_bourso.ext_iprope as ope INNER JOIN (SELECT ext.NOREFINT, MAX(coalesce(ext.DTREF009,'')) AS max_dtref009 FROM lake_gtps_a1861_nauplie_bourso.ext_iprope ext GROUP BY ext.NOREFINT) ope1 on Trim(ope.NOREFINT)=Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)=Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) IN ('IMP','ANUACN','ANURFS', 'ANURFN')) AS IP_R_BOURSO GROUP BY IP_R_BOURSO.cd_type_op, IP_R_BOURSO.cd_prod, IP_R_BOURSO.cd_sous_prod, IP_R_BOURSO.cd_ponctuel_permanent, IP_R_BOURSO.cd_pays_e, IP_R_BOURSO.cd_pays_r, IP_R_BOURSO.cd_banque_e, IP_R_BOURSO.cd_banque_r, IP_R_BOURSO.cd_canal, IP_R_BOURSO.cd_statut_op, IP_R_BOURSO.cd_signature, IP_R_BOURSO.cd_typologie, IP_R_BOURSO.cd_echange, IP_R_BOURSO.is_connexe, IP_R_BOURSO.dt_ope;select dtref001 from lake_gtps_a1861_nauplie_bourso.ext_iprope where trim(dtref001) <> '' and dtref001 like 'ymj%';enseigne STRING,datasource STRING;enseigne='BOURSO',datasource='NAUPLI_IPR'
blb_kpi; cd_type_op STRING, cd_prod STRING, cd_sous_prod STRING, nb_op INT, montant DECIMAL(16, 2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE; SELECT IP_E_BDDF.cd_type_op as cd_type_op, IP_E_BDDF.cd_prod as cd_prod, IP_E_BDDF.cd_sous_prod as cd_sous_prod, count(IP_E_BDDF.NOREFINT) as nb_op, sum(IP_E_BDDF.montant) as montant, IP_E_BDDF.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_E_BDDF.cd_pays_e as cd_pays_e, IP_E_BDDF.cd_pays_r as cd_pays_r, IP_E_BDDF.cd_banque_e as cd_banque_e, IP_E_BDDF.cd_banque_r as cd_banque_r, IP_E_BDDF.cd_canal as cd_canal, IP_E_BDDF.cd_statut_op as cd_statut_op, IP_E_BDDF.cd_signature as cd_signature, IP_E_BDDF.cd_typologie AS cd_typologie, IP_E_BDDF.cd_echange as cd_echange, IP_E_BDDF.is_connexe AS is_connexe, IP_E_BDDF.dt_ope AS dt_ope FROM (SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR( ope.MTOPERAT1, 1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT) ), '.', SUBSTR( ope.MTOPERAT1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT) ) ) AS DECIMAL(16, 2) ) ELSE CAST( ope.MTOPERAT1 AS DECIMAL(16, 2) ) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, ope.CDAPPORI as cd_canal, concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) as cd_statut_op, "" AS cd_signature, "Paiement unique" AS cd_typologie, CASE WHEN SUBSTR(ope.CDIBAEMT, 5, 5) = SUBSTR(ope.CDIBADES, 5, 5) THEN "Intrabancaire" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SGBTMCMC", "SGGNGNGN", "SGGEGQGQ", "INELFRPP", "SGBBBFBF", "SOGETDND", "SGSEHKHH", "LAMXFRPP", "LIMXFRPP", "PAREFRPP", "HAMBJESX", "HAMBGB2L", "SOGEGPGP", "COURFR2T", "KOLBFR21", "TARNFR2L", "HAMBGIGI", "SGPBBE99", "RALPFR2G", "UIBKTNTT", "GSFHFRPP", "SGCRLULL", "SOGEBJBJ", "SSEBGHAC", "NEWGCAMM", "SGABLU22", "SGTGMAMC", "SOGENCNN", "NORDFRPP", "NORDMCM1", "SGSCUS33", "BNUGFR21", "BPOLPFTP", "RUEGCHZZ", "BFCOFRPP", "DETDFRPP", "LAYDFR2W", "BOUSFRPP", "GSCFFR22", "NEWGAU2S", "NEWGGB2L", "HSTBDEHH", "BRDEROBU", "PDBPMEPG", "SGSNSNDA", "DETARUMM", "TWOSITMM", "SOGEHR22", "BIIMMRMR", "BSOGBRSP", "SGMBMAMC", "SOGECAMM", "SOGECY2N", "BFAVMGMG", "SGCICIAB", "TTBBBG22", "EUVLFRPP", "SKBASI2X", "SOGEDZAL", "KOMBCZPP", "SGCMCMCX", "SOGYRSBG", "RSBNRUMM", "REPLGE22", "MOBBMD22", "OHRDMK22", "PUPPALTR", "SGCLCNBJ", "ACTSDEMM", "BOURDEFF", "SMCTFR2A", "SMCTMCM1", "BFCOYTYT", "SOGECGCG", "SGSEKRSL", "SGDILULL", "SGMFLULL", "KBENGGST", "KBIMGB2L", "SGNPJPJT" ) THEN "Intragroupe" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SOGEFRPP", "SOGEMCM1", "SGABATWW", "SOGETWTP", "SGABBEB2", "SOGEZAJJ", "SGABCHZZ", "SOGEDEFF", "SOGETRIS", "SOGEPLPW", "SOGEJPJT", "SOGESGSG", "SOGEINBB", "SOGEKRSE", "SOGENL2A", "SOGEUS33", "SOGEGB2L", "SOGEHKHH", "SOGECAMB", "SOGEITMM", "SOGEESMM", "KOMBSKBA", "HAMBGGSP", "SOGETGTG", "IBLC : 21443433" ) THEN "Intrabancaire"  ELSE CASE WHEN TRIM(ope.CDTYPCSM) = 'X' THEN "Intrabancaire" WHEN TRIM(ope.CDTYPCSM) = 'W' THEN "Intragroupe" WHEN TRIM(ope.CDTYPCSM) = 'U' THEN "SEPA-EU" WHEN TRIM(ope.CDTYPCSM) = 'S' THEN "STEP2" END END as cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) AS date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_bddf.ext_ipeope AS ope INNER JOIN ( SELECT ext.NOREFINT, MAX( coalesce(ext.DTREF009, '') ) AS max_dtref009 FROM lake_gtps_a1861_nauplie_bddf.ext_ipeope ext GROUP BY ext.NOREFINT ) ope1 on Trim(ope.NOREFINT)= Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)= Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) IN ( 'IMP', 'RCCNTR', 'ANUSRP', 'ANURFB', 'RCCNEC' ) ) AS IP_E_BDDF GROUP BY IP_E_BDDF.cd_type_op, IP_E_BDDF.cd_prod, IP_E_BDDF.cd_sous_prod, IP_E_BDDF.cd_ponctuel_permanent, IP_E_BDDF.cd_pays_e, IP_E_BDDF.cd_pays_r, IP_E_BDDF.cd_banque_e, IP_E_BDDF.cd_banque_r, IP_E_BDDF.cd_canal, IP_E_BDDF.cd_statut_op, IP_E_BDDF.cd_signature, IP_E_BDDF.cd_typologie, IP_E_BDDF.cd_echange, IP_E_BDDF.is_connexe, IP_E_BDDF.dt_ope; select dtref001 from lake_gtps_a1861_nauplie_bddf.ext_ipeope where trim(dtref001) <> '' and dtref001 like 'ymj%'; enseigne STRING, datasource STRING; enseigne = 'BDDF', datasource = 'NAUPLI_IPE'
blb_kpi;cd_type_op STRING,cd_prod STRING,cd_sous_prod STRING, nb_op INT, montant DECIMAL(16,2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE;SELECT IP_R_BDDF.cd_type_op as cd_type_op, IP_R_BDDF.cd_prod as cd_prod, IP_R_BDDF.cd_sous_prod as cd_sous_prod, count(IP_R_BDDF.NOREFINT) as nb_op, sum(IP_R_BDDF.montant) as montant, IP_R_BDDF.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_R_BDDF.cd_pays_e as cd_pays_e, IP_R_BDDF.cd_pays_r as cd_pays_r, IP_R_BDDF.cd_banque_e as cd_banque_e, IP_R_BDDF.cd_banque_r as cd_banque_r, IP_R_BDDF.cd_canal as cd_canal, IP_R_BDDF.cd_statut_op as cd_statut_op, IP_R_BDDF.cd_signature as cd_signature , IP_R_BDDF.cd_typologie AS cd_typologie, IP_R_BDDF.cd_echange as cd_echange, IP_R_BDDF.is_connexe AS is_connexe, IP_R_BDDF.dt_ope AS dt_ope FROM ( SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR(ope.MTOPERAT2, 1, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)), '.', SUBSTR(ope.MTOPERAT2, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT)) ) AS DECIMAL(16, 2) ) ELSE CAST(ope.MTOPERAT2 AS DECIMAL(16, 2)) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, "" as cd_canal, concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) as cd_statut_op, "" AS cd_signature, "" AS cd_typologie, "" AS cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) as date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_bddf.ext_iprope as ope INNER JOIN (SELECT ext.NOREFINT, MAX(coalesce(ext.DTREF009,'')) AS max_dtref009 FROM lake_gtps_a1861_nauplie_bddf.ext_iprope ext GROUP BY ext.NOREFINT) ope1 on Trim(ope.NOREFINT)=Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)=Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) IN ('IMP','ANUACN','ANURFS', 'ANURFN')) AS IP_R_BDDF GROUP BY IP_R_BDDF.cd_type_op, IP_R_BDDF.cd_prod, IP_R_BDDF.cd_sous_prod, IP_R_BDDF.cd_ponctuel_permanent, IP_R_BDDF.cd_pays_e, IP_R_BDDF.cd_pays_r, IP_R_BDDF.cd_banque_e, IP_R_BDDF.cd_banque_r, IP_R_BDDF.cd_canal, IP_R_BDDF.cd_statut_op, IP_R_BDDF.cd_signature, IP_R_BDDF.cd_typologie, IP_R_BDDF.cd_echange, IP_R_BDDF.is_connexe, IP_R_BDDF.dt_ope;select dtref001 from lake_gtps_a1861_nauplie_bddf.ext_iprope where trim(dtref001) <> '' and dtref001 like 'ymj%';enseigne STRING,datasource STRING;enseigne='BDDF',datasource='NAUPLI_IPR'
blb_kpi; cd_type_op STRING, cd_prod STRING, cd_sous_prod STRING, nb_op INT, montant DECIMAL(16, 2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE; SELECT IP_E_PRIV_MON.cd_type_op as cd_type_op, IP_E_PRIV_MON.cd_prod as cd_prod, IP_E_PRIV_MON.cd_sous_prod as cd_sous_prod, count(IP_E_PRIV_MON.NOREFINT) as nb_op, sum(IP_E_PRIV_MON.montant) as montant, IP_E_PRIV_MON.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_E_PRIV_MON.cd_pays_e as cd_pays_e, IP_E_PRIV_MON.cd_pays_r as cd_pays_r, IP_E_PRIV_MON.cd_banque_e as cd_banque_e, IP_E_PRIV_MON.cd_banque_r as cd_banque_r, IP_E_PRIV_MON.cd_canal as cd_canal, IP_E_PRIV_MON.cd_statut_op as cd_statut_op, IP_E_PRIV_MON.cd_signature as cd_signature, IP_E_PRIV_MON.cd_typologie AS cd_typologie, IP_E_PRIV_MON.cd_echange as cd_echange, IP_E_PRIV_MON.is_connexe AS is_connexe, IP_E_PRIV_MON.dt_ope AS dt_ope FROM (SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR( ope.MTOPERAT1, 1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT) ), '.', SUBSTR( ope.MTOPERAT1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT) ) ) AS DECIMAL(16, 2) ) ELSE CAST( ope.MTOPERAT1 AS DECIMAL(16, 2) ) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, ope.CDAPPORI as cd_canal, concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) as cd_statut_op, "" AS cd_signature, "Paiement unique" AS cd_typologie, CASE WHEN SUBSTR(ope.CDIBAEMT, 5, 5) = SUBSTR(ope.CDIBADES, 5, 5) THEN "Intrabancaire" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SGBTMCMC", "SGGNGNGN", "SGGEGQGQ", "INELFRPP", "SGBBBFBF", "SOGETDND", "SGSEHKHH", "LAMXFRPP", "LIMXFRPP", "PAREFRPP", "HAMBJESX", "HAMBGB2L", "SOGEGPGP", "COURFR2T", "KOLBFR21", "TARNFR2L", "HAMBGIGI", "SGPBBE99", "RALPFR2G", "UIBKTNTT", "GSFHFRPP", "SGCRLULL", "SOGEBJBJ", "SSEBGHAC", "NEWGCAMM", "SGABLU22", "SGTGMAMC", "SOGENCNN", "NORDFRPP", "NORDMCM1", "SGSCUS33", "BNUGFR21", "BPOLPFTP", "RUEGCHZZ", "BFCOFRPP", "DETDFRPP", "LAYDFR2W", "BOUSFRPP", "GSCFFR22", "NEWGAU2S", "NEWGGB2L", "HSTBDEHH", "BRDEROBU", "PDBPMEPG", "SGSNSNDA", "DETARUMM", "TWOSITMM", "SOGEHR22", "BIIMMRMR", "BSOGBRSP", "SGMBMAMC", "SOGECAMM", "SOGECY2N", "BFAVMGMG", "SGCICIAB", "TTBBBG22", "EUVLFRPP", "SKBASI2X", "SOGEDZAL", "KOMBCZPP", "SGCMCMCX", "SOGYRSBG", "RSBNRUMM", "REPLGE22", "MOBBMD22", "OHRDMK22", "PUPPALTR", "SGCLCNBJ", "ACTSDEMM", "BOURDEFF", "SMCTFR2A", "SMCTMCM1", "BFCOYTYT", "SOGECGCG", "SGSEKRSL", "SGDILULL", "SGMFLULL", "KBENGGST", "KBIMGB2L", "SGNPJPJT" ) THEN "Intragroupe" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SOGEFRPP", "SOGEMCM1", "SGABATWW", "SOGETWTP", "SGABBEB2", "SOGEZAJJ", "SGABCHZZ", "SOGEDEFF", "SOGETRIS", "SOGEPLPW", "SOGEJPJT", "SOGESGSG", "SOGEINBB", "SOGEKRSE", "SOGENL2A", "SOGEUS33", "SOGEGB2L", "SOGEHKHH", "SOGECAMB", "SOGEITMM", "SOGEESMM", "KOMBSKBA", "HAMBGGSP", "SOGETGTG", "IBLC : 21443433" ) THEN "Intrabancaire" ELSE CASE WHEN TRIM(ope.CDTYPCSM) = 'X' THEN "Intrabancaire" WHEN TRIM(ope.CDTYPCSM) = 'W' THEN "Intragroupe" WHEN TRIM(ope.CDTYPCSM) = 'U' THEN "SEPA-EU" WHEN TRIM(ope.CDTYPCSM) = 'S' THEN "STEP2" END END as cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) AS date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_priv_mon.ext_ipeope AS ope INNER JOIN ( SELECT ext.NOREFINT, MAX( coalesce(ext.DTREF009, '') ) AS max_dtref009 FROM lake_gtps_a1861_nauplie_priv_mon.ext_ipeope ext GROUP BY ext.NOREFINT ) ope1 on Trim(ope.NOREFINT)= Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)= Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) IN ( 'IMP', 'RCCNTR', 'ANUSRP', 'ANURFB', 'RCCNEC' ) ) AS IP_E_PRIV_MON GROUP BY IP_E_PRIV_MON.cd_type_op, IP_E_PRIV_MON.cd_prod, IP_E_PRIV_MON.cd_sous_prod, IP_E_PRIV_MON.cd_ponctuel_permanent, IP_E_PRIV_MON.cd_pays_e, IP_E_PRIV_MON.cd_pays_r, IP_E_PRIV_MON.cd_banque_e, IP_E_PRIV_MON.cd_banque_r, IP_E_PRIV_MON.cd_canal, IP_E_PRIV_MON.cd_statut_op, IP_E_PRIV_MON.cd_signature, IP_E_PRIV_MON.cd_typologie, IP_E_PRIV_MON.cd_echange, IP_E_PRIV_MON.is_connexe, IP_E_PRIV_MON.dt_ope; select dtref001 from lake_gtps_a1861_nauplie_priv_mon.ext_ipeope where trim(dtref001) <> '' and dtref001 like 'ymj%'; enseigne STRING, datasource STRING; enseigne = 'BDDF', datasource = 'NAUPLI_IPE'
blb_kpi;cd_type_op STRING,cd_prod STRING,cd_sous_prod STRING, nb_op INT, montant DECIMAL(16,2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE;SELECT IP_R_PRIV_MON.cd_type_op as cd_type_op, IP_R_PRIV_MON.cd_prod as cd_prod, IP_R_PRIV_MON.cd_sous_prod as cd_sous_prod, count(IP_R_PRIV_MON.NOREFINT) as nb_op, sum(IP_R_PRIV_MON.montant) as montant, IP_R_PRIV_MON.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_R_PRIV_MON.cd_pays_e as cd_pays_e, IP_R_PRIV_MON.cd_pays_r as cd_pays_r, IP_R_PRIV_MON.cd_banque_e as cd_banque_e, IP_R_PRIV_MON.cd_banque_r as cd_banque_r, IP_R_PRIV_MON.cd_canal as cd_canal, IP_R_PRIV_MON.cd_statut_op as cd_statut_op, IP_R_PRIV_MON.cd_signature as cd_signature , IP_R_PRIV_MON.cd_typologie AS cd_typologie, IP_R_PRIV_MON.cd_echange as cd_echange, IP_R_PRIV_MON.is_connexe AS is_connexe, IP_R_PRIV_MON.dt_ope AS dt_ope FROM ( SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR(ope.MTOPERAT2, 1, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)), '.', SUBSTR(ope.MTOPERAT2, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT)) ) AS DECIMAL(16, 2) ) ELSE CAST(ope.MTOPERAT2 AS DECIMAL(16, 2)) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, "" as cd_canal, concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) as cd_statut_op, "" AS cd_signature, "" AS cd_typologie, "" AS cd_echange, false AS is_connexe, cast(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))) as date) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_priv_mon.ext_iprope as ope INNER JOIN (SELECT ext.NOREFINT, MAX(coalesce(ext.DTREF009,'')) AS max_dtref009 FROM lake_gtps_a1861_nauplie_priv_mon.ext_iprope ext GROUP BY ext.NOREFINT) ope1 on Trim(ope.NOREFINT)=Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)=Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) IN ('IMP','ANUACN','ANURFS', 'ANURFN')) AS IP_R_PRIV_MON GROUP BY IP_R_PRIV_MON.cd_type_op, IP_R_PRIV_MON.cd_prod, IP_R_PRIV_MON.cd_sous_prod, IP_R_PRIV_MON.cd_ponctuel_permanent, IP_R_PRIV_MON.cd_pays_e, IP_R_PRIV_MON.cd_pays_r, IP_R_PRIV_MON.cd_banque_e, IP_R_PRIV_MON.cd_banque_r, IP_R_PRIV_MON.cd_canal, IP_R_PRIV_MON.cd_statut_op, IP_R_PRIV_MON.cd_signature, IP_R_PRIV_MON.cd_typologie, IP_R_PRIV_MON.cd_echange, IP_R_PRIV_MON.is_connexe, IP_R_PRIV_MON.dt_ope;select dtref001 from lake_gtps_a1861_nauplie_priv_mon.ext_iprope where trim(dtref001) <> '' and dtref001 like 'ymj%';enseigne STRING,datasource STRING;enseigne='BDDF',datasource='NAUPLI_IPR'
blb_kpi; cd_type_op STRING, cd_prod STRING, cd_sous_prod STRING, nb_op INT, montant DECIMAL(16, 2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE; SELECT IP_E_PRIV_FRA.cd_type_op as cd_type_op, IP_E_PRIV_FRA.cd_prod as cd_prod, IP_E_PRIV_FRA.cd_sous_prod as cd_sous_prod, count(IP_E_PRIV_FRA.NOREFINT) as nb_op, sum(IP_E_PRIV_FRA.montant) as montant, IP_E_PRIV_FRA.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_E_PRIV_FRA.cd_pays_e as cd_pays_e, IP_E_PRIV_FRA.cd_pays_r as cd_pays_r, IP_E_PRIV_FRA.cd_banque_e as cd_banque_e, IP_E_PRIV_FRA.cd_banque_r as cd_banque_r, IP_E_PRIV_FRA.cd_canal as cd_canal, IP_E_PRIV_FRA.cd_statut_op as cd_statut_op, IP_E_PRIV_FRA.cd_signature as cd_signature, IP_E_PRIV_FRA.cd_typologie AS cd_typologie, IP_E_PRIV_FRA.cd_echange as cd_echange, IP_E_PRIV_FRA.is_connexe AS is_connexe, IP_E_PRIV_FRA.dt_ope AS dt_ope FROM (SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR( ope.MTOPERAT1, 1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT) ), '.', SUBSTR( ope.MTOPERAT1, LENGTH(ope.MTOPERAT1)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT) ) ) AS DECIMAL(16, 2) ) ELSE CAST( ope.MTOPERAT1 AS DECIMAL(16, 2) ) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, ope.CDAPPORI as cd_canal, concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) as cd_statut_op, "" AS cd_signature, "Paiement unique" AS cd_typologie, CASE WHEN SUBSTR(ope.CDIBAEMT, 5, 5) = SUBSTR(ope.CDIBADES, 5, 5) THEN "Intrabancaire" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SGBTMCMC", "SGGNGNGN", "SGGEGQGQ", "INELFRPP", "SGBBBFBF", "SOGETDND", "SGSEHKHH", "LAMXFRPP", "LIMXFRPP", "PAREFRPP", "HAMBJESX", "HAMBGB2L", "SOGEGPGP", "COURFR2T", "KOLBFR21", "TARNFR2L", "HAMBGIGI", "SGPBBE99", "RALPFR2G", "UIBKTNTT", "GSFHFRPP", "SGCRLULL", "SOGEBJBJ", "SSEBGHAC", "NEWGCAMM", "SGABLU22", "SGTGMAMC", "SOGENCNN", "NORDFRPP", "NORDMCM1", "SGSCUS33", "BNUGFR21", "BPOLPFTP", "RUEGCHZZ", "BFCOFRPP", "DETDFRPP", "LAYDFR2W", "BOUSFRPP", "GSCFFR22", "NEWGAU2S", "NEWGGB2L", "HSTBDEHH", "BRDEROBU", "PDBPMEPG", "SGSNSNDA", "DETARUMM", "TWOSITMM", "SOGEHR22", "BIIMMRMR", "BSOGBRSP", "SGMBMAMC", "SOGECAMM", "SOGECY2N", "BFAVMGMG", "SGCICIAB", "TTBBBG22", "EUVLFRPP", "SKBASI2X", "SOGEDZAL", "KOMBCZPP", "SGCMCMCX", "SOGYRSBG", "RSBNRUMM", "REPLGE22", "MOBBMD22", "OHRDMK22", "PUPPALTR", "SGCLCNBJ", "ACTSDEMM", "BOURDEFF", "SMCTFR2A", "SMCTMCM1", "BFCOYTYT", "SOGECGCG", "SGSEKRSL", "SGDILULL", "SGMFLULL", "KBENGGST", "KBIMGB2L", "SGNPJPJT" ) THEN "Intragroupe" WHEN SUBSTR(ope.CDBICDES, 1, 8) in ( "SOGEFRPP", "SOGEMCM1", "SGABATWW", "SOGETWTP", "SGABBEB2", "SOGEZAJJ", "SGABCHZZ", "SOGEDEFF", "SOGETRIS", "SOGEPLPW", "SOGEJPJT", "SOGESGSG", "SOGEINBB", "SOGEKRSE", "SOGENL2A", "SOGEUS33", "SOGEGB2L", "SOGEHKHH", "SOGECAMB", "SOGEITMM", "SOGEESMM", "KOMBSKBA", "HAMBGGSP", "SOGETGTG", "IBLC : 21443433" ) THEN "Intrabancaire" ELSE CASE WHEN TRIM(ope.CDTYPCSM) = 'X' THEN "Intrabancaire" WHEN TRIM(ope.CDTYPCSM) = 'W' THEN "Intragroupe" WHEN TRIM(ope.CDTYPCSM) = 'U' THEN "SEPA-EU" WHEN TRIM(ope.CDTYPCSM) = 'S' THEN "STEP2" END END as cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) AS date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_priv_fra.ext_ipeope AS ope INNER JOIN ( SELECT ext.NOREFINT, MAX( coalesce(ext.DTREF009, '') ) AS max_dtref009 FROM lake_gtps_a1861_nauplie_priv_fra.ext_ipeope ext GROUP BY ext.NOREFINT ) ope1 on Trim(ope.NOREFINT)= Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)= Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat( trim(ope.cdstaprn), trim(ope.cdstacpl) ) IN ( 'IMP', 'RCCNTR', 'ANUSRP', 'ANURFB', 'RCCNEC' ) ) AS IP_E_PRIV_FRA GROUP BY IP_E_PRIV_FRA.cd_type_op, IP_E_PRIV_FRA.cd_prod, IP_E_PRIV_FRA.cd_sous_prod, IP_E_PRIV_FRA.cd_ponctuel_permanent, IP_E_PRIV_FRA.cd_pays_e, IP_E_PRIV_FRA.cd_pays_r, IP_E_PRIV_FRA.cd_banque_e, IP_E_PRIV_FRA.cd_banque_r, IP_E_PRIV_FRA.cd_canal, IP_E_PRIV_FRA.cd_statut_op, IP_E_PRIV_FRA.cd_signature, IP_E_PRIV_FRA.cd_typologie, IP_E_PRIV_FRA.cd_echange, IP_E_PRIV_FRA.is_connexe, IP_E_PRIV_FRA.dt_ope; select dtref001 from lake_gtps_a1861_nauplie_priv_fra.ext_ipeope where trim(dtref001) <> '' and dtref001 like 'ymj%'; enseigne STRING, datasource STRING; enseigne = 'BDDF', datasource = 'NAUPLI_IPE'
blb_kpi;cd_type_op STRING,cd_prod STRING,cd_sous_prod STRING, nb_op INT, montant DECIMAL(16,2), cd_ponctuel_permanent STRING, cd_pays_e STRING, cd_pays_r STRING, cd_banque_e STRING, cd_banque_r STRING, cd_canal STRING, cd_statut_op STRING, cd_signature STRING, cd_typologie STRING, cd_echange STRING, is_connexe BOOLEAN, dt_ope DATE;SELECT IP_R_PRIV_FRA.cd_type_op as cd_type_op, IP_R_PRIV_FRA.cd_prod as cd_prod, IP_R_PRIV_FRA.cd_sous_prod as cd_sous_prod, count(IP_R_PRIV_FRA.NOREFINT) as nb_op, sum(IP_R_PRIV_FRA.montant) as montant, IP_R_PRIV_FRA.cd_ponctuel_permanent as cd_ponctuel_permanent, IP_R_PRIV_FRA.cd_pays_e as cd_pays_e, IP_R_PRIV_FRA.cd_pays_r as cd_pays_r, IP_R_PRIV_FRA.cd_banque_e as cd_banque_e, IP_R_PRIV_FRA.cd_banque_r as cd_banque_r, IP_R_PRIV_FRA.cd_canal as cd_canal, IP_R_PRIV_FRA.cd_statut_op as cd_statut_op, IP_R_PRIV_FRA.cd_signature as cd_signature , IP_R_PRIV_FRA.cd_typologie AS cd_typologie, IP_R_PRIV_FRA.cd_echange as cd_echange, IP_R_PRIV_FRA.is_connexe AS is_connexe, IP_R_PRIV_FRA.dt_ope AS dt_ope FROM ( SELECT ope.NOREFINT as NOREFINT, ope.CDOPEINT as cd_type_op, ope.CDGRPOPE as cd_prod, ope.cdopeext as cd_sous_prod, CASE WHEN CAST(ope.NBDECIMA AS INT) > 0 THEN CAST( CONCAT( SUBSTR(ope.MTOPERAT2, 1, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)), '.', SUBSTR(ope.MTOPERAT2, LENGTH(ope.MTOPERAT2)- CAST(ope.NBDECIMA AS INT)+ 1, CAST(ope.NBDECIMA AS INT)) ) AS DECIMAL(16, 2) ) ELSE CAST(ope.MTOPERAT2 AS DECIMAL(16, 2)) END as montant, "" as cd_ponctuel_permanent, SUBSTR(ope.CDBICEMT, 5, 2) as cd_pays_e, SUBSTR(ope.CDBICDES, 5, 2) as cd_pays_r, SUBSTR(ope.CDIBAEMT, 5, 5) as cd_banque_e, SUBSTR(ope.CDIBADES, 5, 5) as cd_banque_r, "" as cd_canal, concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) as cd_statut_op, "" AS cd_signature, "" AS cd_typologie, "" AS cd_echange, false AS is_connexe, cast( to_date( from_unixtime( unix_timestamp(ope.dtref001, 'yyyyMMdd') ) ) as date ) AS dt_ope, row_number() over(partition by NOREFINT order by ope.DTREF009 desc) as last_dtref009 FROM lake_gtps_a1861_nauplie_priv_fra.ext_iprope as ope INNER JOIN (SELECT ext.NOREFINT, MAX(coalesce(ext.DTREF009,'')) AS max_dtref009 FROM lake_gtps_a1861_nauplie_priv_fra.ext_iprope ext GROUP BY ext.NOREFINT) ope1 on Trim(ope.NOREFINT)=Trim(ope1.NOREFINT) AND Trim(ope.DTREF009)=Trim(ope1.max_dtref009) WHERE ope.dtref001 LIKE 'ymj%' and (ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),0)), '%') or ope.dt like concat(year(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1)), substr(concat('0',month(add_months(to_date(from_unixtime(unix_timestamp(ope.dtref001, 'yyyyMMdd'))),1))),-2), '%')) AND concat(trim(ope.cdstaprn), trim(ope.cdstacpl)) IN ('IMP','ANUACN','ANURFS','ANURFN')) AS IP_R_PRIV_FRA GROUP BY IP_R_PRIV_FRA.cd_type_op, IP_R_PRIV_FRA.cd_prod, IP_R_PRIV_FRA.cd_sous_prod, IP_R_PRIV_FRA.cd_ponctuel_permanent, IP_R_PRIV_FRA.cd_pays_e, IP_R_PRIV_FRA.cd_pays_r, IP_R_PRIV_FRA.cd_banque_e, IP_R_PRIV_FRA.cd_banque_r, IP_R_PRIV_FRA.cd_canal, IP_R_PRIV_FRA.cd_statut_op, IP_R_PRIV_FRA.cd_signature, IP_R_PRIV_FRA.cd_typologie, IP_R_PRIV_FRA.cd_echange, IP_R_PRIV_FRA.is_connexe, IP_R_PRIV_FRA.dt_ope;select dtref001 from lake_gtps_a1861_nauplie_priv_fra.ext_iprope where trim(dtref001) <> '' and dtref001 like 'ymj%';enseigne STRING,datasource STRING;enseigne='BDDF',datasource='NAUPLI_IPR'