peux tu ameliorer le code java ci-dessous en tenant compte des messages : 
en tenant compte du message ci-dessou :
Refactor this method to reduce its Cognitive Complexity from 33 to the 15 allowed.

private static void generateContentXmlPersEnt(Dataset<Row> contentDs) {
		StructType structType = getSchemaForContentXml("PM");
		contentDs = contentDs
				.filter(col(UsageEAIC.J6_TW_EAI_CDC_DCl.CT_PEO).notEqual("PP"))
				.select(Utils.replaceEmptyColsWithNull(contentDs.columns()));

		Dataset<Row> transformedDs = contentDs.map((MapFunction<Row, Row>) (Row row) -> {
			Row idfRow = RowFactory.create(
					row.getString(row.fieldIndex(CD_RSD_FIS_ENT)),
					row.getString(row.fieldIndex(NO_NIF_ENT)),
					row.getString(row.fieldIndex(CN_IFO_ABS_ENT))
			);
			Row idf1Row = RowFactory.create(
					row.getString(row.fieldIndex(CD_RSD_FIS_CNT_001)),
					row.getString(row.fieldIndex(NO_NIF_PEO_CNT_001)),
					row.getString(row.fieldIndex(CN_IFO_ABS_CNT_001))
			);

			Row idf2Row = RowFactory.create(
					row.getString(row.fieldIndex(CD_RSD_FIS_CNT_002)),
					row.getString(row.fieldIndex(NO_NIF_PEO_CNT_002)),
					row.getString(row.fieldIndex(CN_IFO_ABS_CNT_002))
			);

			Row idf3Row = RowFactory.create(
					row.getString(row.fieldIndex(CD_RSD_FIS_CNT_003)),
					row.getString(row.fieldIndex(NO_NIF_PEO_CNT_003)),
					row.getString(row.fieldIndex(CN_IFO_ABS_CNT_003))
			);

			Row idf4Row = RowFactory.create(
					row.getString(row.fieldIndex(CD_RSD_FIS_CNT_004)),
					row.getString(row.fieldIndex(NO_NIF_PEO_CNT_004)),
					row.getString(row.fieldIndex(CN_IFO_ABS_CNT_004))
			);


			Row cnt1Row = RowFactory.create(
					row.getString(row.fieldIndex(LN_PNY_PEO_CNT_001)),
					row.getString(row.fieldIndex(LP_PEO_CNT_001)),
					row.getString(row.fieldIndex(DN_PEO_CNT_001)),
					row.getString(row.fieldIndex(AV_NAI_PEO_CNT_001)),
					row.getString(row.fieldIndex(AY_NAI_PEO_CNT_001)),
					row.getString(row.fieldIndex(AL_RUE_PEO_CNT_001)),
					row.getString(row.fieldIndex(AL_BAT_PEO_CNT_001)),
					listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_001))) ? row.getString(row.fieldIndex(AC_PEO_CNT_001)) : null,
					!listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_001))) ? row.getString(row.fieldIndex(CD_DTB_ETG_CNT_001)) : null,
					row.getString(row.fieldIndex(AL_CMN_PEO_CNT_001)),
					row.getString(row.fieldIndex(AY_ADR_PEO_CNT_001)),
					row.getString(row.fieldIndex(LN_UTI_PEO_CNT_001)),
					idf1Row
			);

			Row cnt2Row = RowFactory.create(
					row.getString(row.fieldIndex(LN_PNY_PEO_CNT_002)),
					row.getString(row.fieldIndex(LP_PEO_CNT_002)),
					row.getString(row.fieldIndex(DN_PEO_CNT_002)),
					row.getString(row.fieldIndex(AV_NAI_PEO_CNT_002)),
					row.getString(row.fieldIndex(AY_NAI_PEO_CNT_002)),
					row.getString(row.fieldIndex(AL_RUE_PEO_CNT_002)),
					row.getString(row.fieldIndex(AL_BAT_PEO_CNT_002)),
					listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_002))) ? row.getString(row.fieldIndex(AC_PEO_CNT_002)) : null,
					!listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_002))) ? row.getString(row.fieldIndex(CD_DTB_ETG_CNT_002)) : null,
					row.getString(row.fieldIndex(AL_CMN_PEO_CNT_002)),
					row.getString(row.fieldIndex(AY_ADR_PEO_CNT_002)),
					row.getString(row.fieldIndex(LN_UTI_PEO_CNT_002)),
					idf2Row
			);

			Row cnt3Row = RowFactory.create(
					row.getString(row.fieldIndex(LN_PNY_PEO_CNT_003)),
					row.getString(row.fieldIndex(LP_PEO_CNT_003)),
					row.getString(row.fieldIndex(DN_PEO_CNT_003)),
					row.getString(row.fieldIndex(AV_NAI_PEO_CNT_003)),
					row.getString(row.fieldIndex(AY_NAI_PEO_CNT_003)),
					row.getString(row.fieldIndex(AL_RUE_PEO_CNT_003)),
					row.getString(row.fieldIndex(AL_BAT_PEO_CNT_003)),
					row.getString(row.fieldIndex(AC_PEO_CNT_003)),
					listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_003))) ? row.getString(row.fieldIndex(AC_PEO_CNT_003)) : null,
					!listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_003))) ? row.getString(row.fieldIndex(CD_DTB_ETG_CNT_003)) : null,
					row.getString(row.fieldIndex(AL_CMN_PEO_CNT_003)),
					row.getString(row.fieldIndex(AY_ADR_PEO_CNT_003)),
					row.getString(row.fieldIndex(LN_UTI_PEO_CNT_003)),
					idf3Row
			);

			Row cnt4Row = RowFactory.create(
					row.getString(row.fieldIndex(LN_PNY_PEO_CNT_004)),
					row.getString(row.fieldIndex(LP_PEO_CNT_004)),
					row.getDate(row.fieldIndex(DN_PEO_CNT_004)),
					row.getString(row.fieldIndex(AV_NAI_PEO_CNT_004)),
					row.getString(row.fieldIndex(AY_NAI_PEO_CNT_004)),
					row.getString(row.fieldIndex(AL_RUE_PEO_CNT_004)),
					row.getString(row.fieldIndex(AL_BAT_PEO_CNT_004)),
					listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_004))) ? row.getString(row.fieldIndex(AC_PEO_CNT_004)) : null,
					!listCdPays.contains(row.getString(row.fieldIndex(AY_ADR_PEO_CNT_004))) ? row.getString(row.fieldIndex(CD_DTB_ETG_CNT_004)) : null,
					row.getString(row.fieldIndex(AL_CMN_PEO_CNT_004)),
					row.getString(row.fieldIndex(AY_ADR_PEO_CNT_004)),
					row.getString(row.fieldIndex(LN_UTI_PEO_CNT_004)),
					idf4Row
			);

			Row[] cntValues = new Row[]{
					row.getInt(row.fieldIndex(QT_CNT)) >= 1 && "02".equals(row.getString(row.fieldIndex(CD_ACV_PSV_ENT))) ? cnt1Row : null,
					row.getInt(row.fieldIndex(QT_CNT)) >= 2 && "02".equals(row.getString(row.fieldIndex(CD_ACV_PSV_ENT))) ? cnt2Row : null,
					row.getInt(row.fieldIndex(QT_CNT)) >= 3 && "02".equals(row.getString(row.fieldIndex(CD_ACV_PSV_ENT))) ? cnt3Row : null,
					row.getInt(row.fieldIndex(QT_CNT)) >= 4 && "02".equals(row.getString(row.fieldIndex(CD_ACV_PSV_ENT))) ? cnt4Row : null,
			};

			Row cptRow = RowFactory.create(
					row.getString(row.fieldIndex(NO_IBA_CPT)),
					row.getString(row.fieldIndex(CD_CAR_NMR_CLI_CPT)),
					Utils.reformatDate(row.getDate(row.fieldIndex(DA_ENV_PRE_DMD_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					Utils.reformatDate(row.getDate(row.fieldIndex(DA_RPN_PRE_DMD_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					Utils.reformatDate(row.getDate(row.fieldIndex(DA_ENV_REL_DMD_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					Utils.reformatDate(row.getDate(row.fieldIndex(DA_RPN_REL_DMD_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					Utils.reformatDate(row.getDate(row.fieldIndex(DA_RGN_STA_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					!row.isNullAt(row.fieldIndex(CN_RGN_CPT)) ? String.valueOf(row.getInt(row.fieldIndex(CN_RGN_CPT))) : null,
					Utils.reformatDate(row.getDate(row.fieldIndex(DA_ANE_CNA_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					Utils.reformatDate(row.getDate(row.fieldIndex(DF_CPT)), GeneralConstants.DATE_FORMAT.DDMMYYYY),
					cntValues
			);
			return RowFactory.create(
					row.getString(row.fieldIndex(LL_ENT)),
					row.getString(row.fieldIndex(LL_RAI_SOC_ENT)),
					row.getString(row.fieldIndex(NO_SIR_ENT)),
					row.getString(row.fieldIndex(AL_RUE_ENT)),
					row.getString(row.fieldIndex(AL_BAT_ENT)),
					row.getString(row.fieldIndex(AC_ENT)),
					row.getString(row.fieldIndex(CD_DTB_ETG_ENT)),
					row.getString(row.fieldIndex(AL_CMN_ENT)),
					row.getString(row.fieldIndex(AY_ADR_ENT)),
					row.getString(row.fieldIndex(CD_ACV_PSV_ENT)),
					row.getInt(row.fieldIndex(QT_CNT)) == 0 ? idfRow : null,
					cptRow
			);
		}, RowEncoder.apply(structType));

		try {
			generateXmlFile(transformedDs, ENT, "CONTENT_ENT_FILE");
		} catch (Exception e) {
			LOGGER.error("Error when generate content XML :" + e.getMessage());
		}

	}
